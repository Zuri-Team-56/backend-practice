# Generated by Django 3.2.4 on 2021-07-07 08:46

import autoslug.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=True, populate_from='title')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('body', models.TextField()),
                ('date', models.DateField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CareerQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=True, populate_from='course_name')),
                ('image', models.FileField(blank=True, null=True, upload_to=None)),
                ('tution_fees', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('course_requirements', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('program', models.CharField(choices=[('nil', '.....'), ('BSc', "Bachelor's Degree"), ('MSc', "Master's Degree"), ('PhD', 'Doctorate Degree'), ('HND', 'Higher National Diploma'), ('OND', 'Ordinary National Diploma')], default='.....', max_length=200)),
                ('school_location', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('duration', models.CharField(blank=True, default='', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=True, populate_from='name')),
                ('overview', models.TextField()),
                ('program', models.CharField(choices=[('nil', '.....'), ('BSc', "Bachelor's Degree"), ('MSc', "Master's Degree"), ('PhD', 'Doctorate Degree'), ('HND', 'Higher National Diploma'), ('OND', 'Ordinary National Diploma'), ('ALL', 'All')], default='.....', max_length=200)),
                ('image', models.FileField(blank=True, null=True, upload_to=None)),
                ('world_ranking', models.IntegerField(blank=True, null=True)),
                ('website', models.URLField(blank=True, max_length=234, null=True)),
                ('number_of_students', models.IntegerField(blank=True, null=True)),
                ('financial_aid', models.TextField()),
                ('hostel', models.TextField()),
                ('has_hostel', models.BooleanField(default=True)),
                ('location', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('testimonial', models.TextField(max_length=5000)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Tuition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=True, populate_from='title')),
                ('undergraduate_tuition', models.TextField()),
                ('undergraduate_fee', models.DecimalField(decimal_places=2, help_text='Maximum 999.99', max_digits=5, verbose_name='Undergraduate fee')),
                ('postgraduate_tuition', models.TextField()),
                ('postgraduate_fee', models.DecimalField(decimal_places=2, help_text='Maximum 999.99', max_digits=5, verbose_name='Postgraduate fee')),
                ('website', models.URLField(blank=True, max_length=234, null=True)),
                ('school_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees', to='core.school')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telephone', models.CharField(max_length=255)),
                ('mobile', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE'), ('OTHER', 'OTHER')], max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_accounts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(help_text='Enter Name of category', max_length=150, unique=True)),
                ('title', models.CharField(help_text='Enter title', max_length=150, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=True, populate_from='title')),
                ('information', models.TextField()),
                ('date', models.DateField()),
                ('school_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news', to='core.school')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter Name of Scholarship', max_length=250, unique=True)),
                ('description', models.TextField()),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=True, populate_from='name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('requirements', models.TextField(verbose_name='Application requirements')),
                ('website', models.URLField(blank=True, help_text='Enter scholarship Twitter link', max_length=350, unique=True)),
                ('date', models.DateField()),
                ('institutition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='school', to='core.school')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SavedSchool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.school')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_schools', to='core.studentaccount')),
            ],
        ),
        migrations.CreateModel(
            name='SavedScholarship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scholarship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.scholarship')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_scholarships', to='core.studentaccount')),
            ],
        ),
        migrations.CreateModel(
            name='SavedCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_courses', to='core.studentaccount')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField(max_length=5000)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('educational_status', models.CharField(max_length=150)),
                ('rating', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('date', models.DateField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('name_of_school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.school')),
            ],
        ),
        migrations.CreateModel(
            name='FacultyName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter Name of Faculty', max_length=150, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=True, populate_from='name')),
                ('name_of_school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='faculties', to='core.school')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EntryRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=True, populate_from='title')),
                ('entry_requirements', models.TextField(max_length=5000)),
                ('school_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='core.school')),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter Name of Department', max_length=150, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=True, populate_from='name')),
                ('name_of_faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty', to='core.facultyname')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='course',
            name='name_of_department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department', to='core.departmentname'),
        ),
        migrations.AddField(
            model_name='course',
            name='school_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.school'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('date', models.DateField()),
                ('articlename', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article', to='core.article')),
                ('commenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CareerQuestionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.CharField(max_length=200)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='core.careerquestion')),
            ],
        ),
        migrations.CreateModel(
            name='CareerQuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='core.careerquestionoption')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='core.careerquestion')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='career_choices', to='core.studentaccount')),
            ],
        ),
    ]
